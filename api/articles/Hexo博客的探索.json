{"title":"Hexo博客的探索","slug":"Hexo博客的探索","date":"2024-04-14T05:47:49.000Z","updated":"2024-04-27T02:40:41.000Z","comments":true,"path":"api/articles/Hexo博客的探索.json","excerpt":null,"covers":null,"content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Hexo 是一个基于 Node.js 的，快速、简洁且高效的博客框架。它具有丰富的主题和插件，以及超快的速度。支持 Markdown 语法，可以方便快捷地编写博客文章。同时支持 Node 命令，可以一键部署到 GitHub Pages , Vercel 等其他平台。</p>\n<h2 id=\"1-环境\"><a href=\"#1-环境\" class=\"headerlink\" title=\"1.环境\"></a>1.环境</h2><h3 id=\"1-1-安装-Git\"><a href=\"#1-1-安装-Git\" class=\"headerlink\" title=\"1.1 安装 Git\"></a>1.1 安装 Git</h3><p>检测是否安装成功：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入：</span></span><br><span class=\"line\">git -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-安装-Node-js-和-npm\"><a href=\"#1-2-安装-Node-js-和-npm\" class=\"headerlink\" title=\"1.2 安装 Node.js 和 npm\"></a>1.2 安装 Node.js 和 npm</h3><p>检测是否安装成功：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入：</span></span><br><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-安装-Hexo\"><a href=\"#1-3-安装-Hexo\" class=\"headerlink\" title=\"1.3 安装 Hexo\"></a>1.3 安装 Hexo</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入：</span></span><br><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Hexo-使用\"><a href=\"#2-Hexo-使用\" class=\"headerlink\" title=\"2.Hexo 使用\"></a>2.Hexo 使用</h2><h3 id=\"2-1-基础命令\"><a href=\"#2-1-基础命令\" class=\"headerlink\" title=\"2.1 基础命令\"></a>2.1 基础命令</h3><p>官方文档：<a href=\"https://hexo.io/zh-cn/docs/commands/\">命令 | Hexo</a></p>\n<ul>\n<li>初始化 <code>hexo init &amp;&amp; npm install</code></li>\n<li>生成静态文件 <code>hexo g</code></li>\n<li>启动本地服务器 <code>hexo s</code></li>\n<li>清理缓存 <code>hexo clean</code></li>\n<li>部署到远程服务器 <code>hexo d</code></li>\n</ul>\n<p>Hexo 目录结构：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">├── _config.yml       # 站点配置文件</span><br><span class=\"line\">├── .gitignore         # Git忽略文件列表</span><br><span class=\"line\">├── node_modules       # Node.js依赖包</span><br><span class=\"line\">├── package.json       # 项目元数据和依赖</span><br><span class=\"line\">├── package-lock.json  # 依赖版本锁定</span><br><span class=\"line\">├── source             # 内容和资源目录</span><br><span class=\"line\">│   ├── _posts          # 博客文章</span><br><span class=\"line\">│   ├── _drafts         # 草稿</span><br><span class=\"line\">│   ├── _pages          # 静态页面</span><br><span class=\"line\">│   └── assets           # 静态资源（图片、样式等）</span><br><span class=\"line\">└── themes              # 主题目录</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-1-网站配置\"><a href=\"#2-2-1-网站配置\" class=\"headerlink\" title=\"2.2.1 网站配置\"></a>2.2.1 网站配置</h3><p>网站配置文件：<code>_config.yml</code> ，官方配置文档：<a href=\"https://hexo.io/zh-cn/docs/configuration/\">配置 | Hexo</a></p>\n<h3 id=\"2-2-2-主题配置\"><a href=\"#2-2-2-主题配置\" class=\"headerlink\" title=\"2.2.2 主题配置\"></a>2.2.2 主题配置</h3><p>安装主题，官方收录主题：<a href=\"https://hexo.io/themes/\">主题 | Hexo</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在网站的根目录下，执行：</span></span><br><span class=\"line\">git clone git@github.com:xxxx/xxxx theme/xxxx</span><br></pre></td></tr></table></figure>\n<p>然后修改 <code>_config.yml</code> 网站配置文件：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Extensions</span></span><br><span class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></span><br><span class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">xxxx</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-3-插件配置\"><a href=\"#2-2-3-插件配置\" class=\"headerlink\" title=\"2.2.3 插件配置\"></a>2.2.3 插件配置</h3><p>安装插件，官方收录插件：<a href=\"https://hexo.io/plugins/\">插件 | Hexo</a></p>\n<h2 id=\"3-Git-推送\"><a href=\"#3-Git-推送\" class=\"headerlink\" title=\"3.Git 推送\"></a>3.Git 推送</h2><ol>\n<li>安装推送插件<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入</span></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>\n<li>修改 <code>_config.yml</code> 网站配置<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:xxxx/xxxxx</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure></li>\n<li>命令：<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入：</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"4-在线编辑\"><a href=\"#4-在线编辑\" class=\"headerlink\" title=\"4.在线编辑\"></a>4.在线编辑</h2><p>上述 <a href=\"#3-%E6%8E%A8%E9%80%81\">推送</a> 方法会将 Hexo 生成的 <code>public</code> 静态文件直接推送至代码仓库，因此每次更改网站内容时，都需在本地环境进行。</p>\n<p>又因 GitHub 等代码托管平台无法直接处理 Hexo 生成的静态文件，所以可将本地 Hexo 根目录文件推送至仓库，并参考 <a href=\"https://xaoxuu.com/blog/20221126/#GitHub-Actions-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2\">GitHub Actions 自动化部署</a> 完成处理。</p>\n<p>然后可通过 <a href=\"https://github.com/codespaces\">GitHub Codespaces</a> &#x2F; <a href=\"https://www.oplog.cn/qexo/\">Qexo</a> &#x2F; <a href=\"https://hexoplusplus.js.org/\">HexoPlusPlus</a> 及其他方式&#x2F;项目实现对 Hexo 的在线编辑。</p>\n<p><strong>注：上传前若无 <code>.gitignore</code> 文件，则需新建一个以忽略部分内容：</strong></p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">.DS_Store</span><br><span class=\"line\">Thumbs.db</span><br><span class=\"line\">db.json</span><br><span class=\"line\">*.log</span><br><span class=\"line\">node_modules/</span><br><span class=\"line\">public/</span><br><span class=\"line\">.deploy*/</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-部署\"><a href=\"#5-部署\" class=\"headerlink\" title=\"5.部署\"></a>5.部署</h2><ul>\n<li>GitHub Pages &#x2F; CloudFlare &#x2F; Vercel &#x2F; Netlify</li>\n<li>And so on…<br>可通过 Hexo 生成的静态文件推送至代码仓库，并使用上述或其他部署网站，即可轻松将博客内容发布到网络。<br>因部署网站分配的子域名也许会被大陆 DNS 污染，无法直接访问，所以建议解析自己的域名以实现正常访问。</li>\n</ul>\n","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Hexo 是一个基于 Node.js 的，快速、简洁且高效的博客框架。它具有丰富的主题和插件，以及超快的速度。支持 Markdown 语法，可以方便快捷地编写博客文章。同时支持 Node 命令，可以一键部署到 GitHub Pages , Vercel 等其他平台。</p>\n<h2 id=\"1-环境\"><a href=\"#1-环境\" class=\"headerlink\" title=\"1.环境\"></a>1.环境</h2><h3 id=\"1-1-安装-Git\"><a href=\"#1-1-安装-Git\" class=\"headerlink\" title=\"1.1 安装 Git\"></a>1.1 安装 Git</h3><p>检测是否安装成功：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入：</span></span><br><span class=\"line\">git -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-安装-Node-js-和-npm\"><a href=\"#1-2-安装-Node-js-和-npm\" class=\"headerlink\" title=\"1.2 安装 Node.js 和 npm\"></a>1.2 安装 Node.js 和 npm</h3><p>检测是否安装成功：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入：</span></span><br><span class=\"line\">node -v</span><br><span class=\"line\">npm -v</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-3-安装-Hexo\"><a href=\"#1-3-安装-Hexo\" class=\"headerlink\" title=\"1.3 安装 Hexo\"></a>1.3 安装 Hexo</h3><figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入：</span></span><br><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Hexo-使用\"><a href=\"#2-Hexo-使用\" class=\"headerlink\" title=\"2.Hexo 使用\"></a>2.Hexo 使用</h2><h3 id=\"2-1-基础命令\"><a href=\"#2-1-基础命令\" class=\"headerlink\" title=\"2.1 基础命令\"></a>2.1 基础命令</h3><p>官方文档：<a href=\"https://hexo.io/zh-cn/docs/commands/\">命令 | Hexo</a></p>\n<ul>\n<li>初始化 <code>hexo init &amp;&amp; npm install</code></li>\n<li>生成静态文件 <code>hexo g</code></li>\n<li>启动本地服务器 <code>hexo s</code></li>\n<li>清理缓存 <code>hexo clean</code></li>\n<li>部署到远程服务器 <code>hexo d</code></li>\n</ul>\n<p>Hexo 目录结构：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">├── _config.yml       # 站点配置文件</span><br><span class=\"line\">├── .gitignore         # Git忽略文件列表</span><br><span class=\"line\">├── node_modules       # Node.js依赖包</span><br><span class=\"line\">├── package.json       # 项目元数据和依赖</span><br><span class=\"line\">├── package-lock.json  # 依赖版本锁定</span><br><span class=\"line\">├── source             # 内容和资源目录</span><br><span class=\"line\">│   ├── _posts          # 博客文章</span><br><span class=\"line\">│   ├── _drafts         # 草稿</span><br><span class=\"line\">│   ├── _pages          # 静态页面</span><br><span class=\"line\">│   └── assets           # 静态资源（图片、样式等）</span><br><span class=\"line\">└── themes              # 主题目录</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-1-网站配置\"><a href=\"#2-2-1-网站配置\" class=\"headerlink\" title=\"2.2.1 网站配置\"></a>2.2.1 网站配置</h3><p>网站配置文件：<code>_config.yml</code> ，官方配置文档：<a href=\"https://hexo.io/zh-cn/docs/configuration/\">配置 | Hexo</a></p>\n<h3 id=\"2-2-2-主题配置\"><a href=\"#2-2-2-主题配置\" class=\"headerlink\" title=\"2.2.2 主题配置\"></a>2.2.2 主题配置</h3><p>安装主题，官方收录主题：<a href=\"https://hexo.io/themes/\">主题 | Hexo</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在网站的根目录下，执行：</span></span><br><span class=\"line\">git clone git@github.com:xxxx/xxxx theme/xxxx</span><br></pre></td></tr></table></figure>\n<p>然后修改 <code>_config.yml</code> 网站配置文件：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Extensions</span></span><br><span class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></span><br><span class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></span><br><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">xxxx</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-3-插件配置\"><a href=\"#2-2-3-插件配置\" class=\"headerlink\" title=\"2.2.3 插件配置\"></a>2.2.3 插件配置</h3><p>安装插件，官方收录插件：<a href=\"https://hexo.io/plugins/\">插件 | Hexo</a></p>\n<h2 id=\"3-Git-推送\"><a href=\"#3-Git-推送\" class=\"headerlink\" title=\"3.Git 推送\"></a>3.Git 推送</h2><ol>\n<li>安装推送插件<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入</span></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>\n<li>修改 <code>_config.yml</code> 网站配置<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">git@github.com:xxxx/xxxxx</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure></li>\n<li>命令：<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开终端，输入：</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"4-在线编辑\"><a href=\"#4-在线编辑\" class=\"headerlink\" title=\"4.在线编辑\"></a>4.在线编辑</h2><p>上述 <a href=\"#3-%E6%8E%A8%E9%80%81\">推送</a> 方法会将 Hexo 生成的 <code>public</code> 静态文件直接推送至代码仓库，因此每次更改网站内容时，都需在本地环境进行。</p>\n<p>又因 GitHub 等代码托管平台无法直接处理 Hexo 生成的静态文件，所以可将本地 Hexo 根目录文件推送至仓库，并参考 <a href=\"https://xaoxuu.com/blog/20221126/#GitHub-Actions-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2\">GitHub Actions 自动化部署</a> 完成处理。</p>\n<p>然后可通过 <a href=\"https://github.com/codespaces\">GitHub Codespaces</a> &#x2F; <a href=\"https://www.oplog.cn/qexo/\">Qexo</a> &#x2F; <a href=\"https://hexoplusplus.js.org/\">HexoPlusPlus</a> 及其他方式&#x2F;项目实现对 Hexo 的在线编辑。</p>\n<p><strong>注：上传前若无 <code>.gitignore</code> 文件，则需新建一个以忽略部分内容：</strong></p>\n<figure class=\"highlight txt\"><table><tr><td class=\"code\"><pre><span class=\"line\">.DS_Store</span><br><span class=\"line\">Thumbs.db</span><br><span class=\"line\">db.json</span><br><span class=\"line\">*.log</span><br><span class=\"line\">node_modules/</span><br><span class=\"line\">public/</span><br><span class=\"line\">.deploy*/</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-部署\"><a href=\"#5-部署\" class=\"headerlink\" title=\"5.部署\"></a>5.部署</h2><ul>\n<li>GitHub Pages &#x2F; CloudFlare &#x2F; Vercel &#x2F; Netlify</li>\n<li>And so on…<br>可通过 Hexo 生成的静态文件推送至代码仓库，并使用上述或其他部署网站，即可轻松将博客内容发布到网络。<br>因部署网站分配的子域名也许会被大陆 DNS 污染，无法直接访问，所以建议解析自己的域名以实现正常访问。</li>\n</ul>\n","categories":[{"name":"教程","path":"api/categories/教程.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"GitHub","path":"api/tags/GitHub.json"}]}